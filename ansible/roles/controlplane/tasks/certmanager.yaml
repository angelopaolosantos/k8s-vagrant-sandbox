---
# file: roles/controlplane/tasks/certmanager.yml

- name: Copy cert-manager root certificates
  become_user: root
  copy:
    src: "{{ role_path }}/files/certs/"
    remote_src: no
    dest: /opt/ca-certificates/
    mode: 0444

- name: Install Cert Manager  via YAML Manifests
  shell: |
    kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml

- name: Create Cert Manager tls secret
  shell: |
    kubectl create secret tls -n cert-manager root-ca \
    --cert=/opt/ca-certificates/root-ca.pem \
    --key=/opt/ca-certificates/root-ca-key.pem
  failed_when: false

- name: Wait for Cert Manager to be available
  shell: |
    kubectl wait deployment -n cert-manager {{ item }} --for condition=Available=True --timeout=120s
  with_items:
    - cert-manager
    - cert-manager-cainjector
    - cert-manager-webhook
  register: cert_manager_deployment_ready
  until: item in cert_manager_deployment_ready.stdout

- debug: var=item.stdout
  with_items: "{{ cert_manager_deployment_ready.results }}"

- name: Create Cert-Manager Cluster Issuer
  shell: 
    cmd: |
      kubectl apply -f - <<EOF
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: ca-issuer
      spec:
        ca:
          secretName: root-ca
      EOF
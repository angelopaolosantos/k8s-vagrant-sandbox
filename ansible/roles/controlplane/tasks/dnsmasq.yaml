---
# file: roles/controlplane/tasks/dnsmasq.yml

- name: Install Dnsmasq
  apt:
    update_cache: yes
    pkg:
      - dnsmasq

- name: Copy dnsmasq.conf
  copy:
    src: "{{ role_path }}/files/dnsmasq/dnsmasq.conf"
    remote_src: no
    dest: /etc/dnsmasq.conf

- name: Enable dnsmasq
  ansible.builtin.systemd:
    name: dnsmasq
    enabled: true
    masked: false
    state: started

- name: Disable systemd-resolved
  ansible.builtin.systemd:
    name: systemd-resolved
    enabled: false
    masked: false
    state: stopped

- stat: path=/etc/resolv.conf
  register: links

- debug: msg="link exists"
  when: links.stat.islnk is defined and links.stat.islnk

- name: Remove symlink
  file:
    path: "/etc/resolv.conf"
    state: absent
  when: links.stat.islnk is defined and links.stat.islnk

- name: Get ingress ip
  become_user: vagrant
  shell: |
    kubectl get services --namespace ingress-nginx \
    ingress-nginx-controller \  
    --output jsonpath='{.status.loadBalancer.ingress[0].ip}'
  register: ingress_ip
  retries: 5
  delay: 3
  until: ingress_ip is not failed

- name: Create kubeadm.k8s.conf
  copy:
    dest: /etc/dnsmasq.d/kubeadm.k8s.conf
    content: |
      address=/{{ ingress_domain }}/{{ ingress_ip.stdout_lines[0] }}

- name: Add dnsmasq DNS server to resolv.conf - localhost 127.0.0.1
  become_user: vagrant
  shell: |
    sudo tee /etc/resolv.conf <<EOF
    nameserver 127.0.0.1
    nameserver 8.8.8.8
    EOF
      
- name: Restart dnsmasq
  ansible.builtin.systemd:
    name: dnsmasq
    state: restarted

- name: Copy configmap-coredns-dev.yaml. Point CoreDNS to DNSMASQ server
  become_user: vagrant
  copy:
    src: "{{ role_path }}/files/dnsmasq/configmap-coredns-dev.yaml"
    remote_src: no
    dest: /home/vagrant/dnsmasq/

- name: Add dnsmasq DNS server to resolv.conf
  become_user: vagrant
  shell: |
    kubectl apply -f /home/vagrant/dnsmasq/configmap-coredns-dev.yaml
    kubectl rollout restart -n kube-system deployment/coredns
